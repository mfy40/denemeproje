// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kutuphane.database.Context;

namespace kutuphane.database.Migrations
{
    [DbContext(typeof(KutuphaneDbContext))]
    [Migration("20200909145725_dd")]
    partial class dd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kutuphane.database.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatePrinting")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePublish")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditionNo")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<string>("Kod")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PricingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ShelfNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockNumber")
                        .HasColumnType("int");

                    b.Property<int>("rlt_Bookshelf_Id")
                        .HasColumnType("int");

                    b.Property<int>("rlt_Publisher_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PricingId");

                    b.HasIndex("rlt_Bookshelf_Id");

                    b.HasIndex("rlt_Publisher_Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("kutuphane.database.Models.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rtl_Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("rtl_Category_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rtl_Book_Id");

                    b.HasIndex("rtl_Category_Id");

                    b.ToTable("BookCategories");
                });

            modelBuilder.Entity("kutuphane.database.Models.BookWriter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rlt_Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("rlt_Writer_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Book_Id");

                    b.HasIndex("rlt_Writer_Id");

                    b.ToTable("BookWriters");
                });

            modelBuilder.Entity("kutuphane.database.Models.Bookshelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rlt_Saloon_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Saloon_Id");

                    b.ToTable("Bookshelfs");
                });

            modelBuilder.Entity("kutuphane.database.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("kutuphane.database.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecruitmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rlt_Faculty_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Faculty_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("kutuphane.database.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Facultes");
                });

            modelBuilder.Entity("kutuphane.database.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfTaken")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GivenDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TakenDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rlt_Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("rlt_Student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Book_Id");

                    b.HasIndex("rlt_Student_Id");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("kutuphane.database.Models.Pricing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rlt_Student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Student_Id");

                    b.ToTable("Pricings");
                });

            modelBuilder.Entity("kutuphane.database.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("kutuphane.database.Models.Saloon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Saloons");
                });

            modelBuilder.Entity("kutuphane.database.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CitizenshipNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentNo")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("kutuphane.database.Models.StudentDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("rlt_Department_Id")
                        .HasColumnType("int");

                    b.Property<int>("rlt_Student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Department_Id");

                    b.HasIndex("rlt_Student_Id");

                    b.ToTable("StudentDepartments");
                });

            modelBuilder.Entity("kutuphane.database.Models.Writer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordCreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Writers");
                });

            modelBuilder.Entity("kutuphane.database.Models.Book", b =>
                {
                    b.HasOne("kutuphane.database.Models.Pricing", null)
                        .WithMany("Books")
                        .HasForeignKey("PricingId");

                    b.HasOne("kutuphane.database.Models.Bookshelf", "Bookshelf")
                        .WithMany()
                        .HasForeignKey("rlt_Bookshelf_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutuphane.database.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("rlt_Publisher_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutuphane.database.Models.BookCategory", b =>
                {
                    b.HasOne("kutuphane.database.Models.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("rtl_Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutuphane.database.Models.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("rtl_Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutuphane.database.Models.BookWriter", b =>
                {
                    b.HasOne("kutuphane.database.Models.Book", "Book")
                        .WithMany("BookWriters")
                        .HasForeignKey("rlt_Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutuphane.database.Models.Writer", "Writer")
                        .WithMany("BookWriters")
                        .HasForeignKey("rlt_Writer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutuphane.database.Models.Bookshelf", b =>
                {
                    b.HasOne("kutuphane.database.Models.Saloon", "Saloon")
                        .WithMany("Bookshelfs")
                        .HasForeignKey("rlt_Saloon_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutuphane.database.Models.Department", b =>
                {
                    b.HasOne("kutuphane.database.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("rlt_Faculty_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutuphane.database.Models.Operation", b =>
                {
                    b.HasOne("kutuphane.database.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("rlt_Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutuphane.database.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("rlt_Student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutuphane.database.Models.Pricing", b =>
                {
                    b.HasOne("kutuphane.database.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("rlt_Student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutuphane.database.Models.StudentDepartment", b =>
                {
                    b.HasOne("kutuphane.database.Models.Department", "Department")
                        .WithMany("StudentDepartments")
                        .HasForeignKey("rlt_Department_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutuphane.database.Models.Student", "Student")
                        .WithMany("StudentDepartments")
                        .HasForeignKey("rlt_Student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
